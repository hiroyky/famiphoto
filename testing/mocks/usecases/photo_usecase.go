// Code generated by MockGen. DO NOT EDIT.
// Source: usecases/photo_usecase.go

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/hiroyky/famiphoto/entities"
)

// MockPhotoUseCase is a mock of PhotoUseCase interface.
type MockPhotoUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockPhotoUseCaseMockRecorder
}

// MockPhotoUseCaseMockRecorder is the mock recorder for MockPhotoUseCase.
type MockPhotoUseCaseMockRecorder struct {
	mock *MockPhotoUseCase
}

// NewMockPhotoUseCase creates a new mock instance.
func NewMockPhotoUseCase(ctrl *gomock.Controller) *MockPhotoUseCase {
	mock := &MockPhotoUseCase{ctrl: ctrl}
	mock.recorder = &MockPhotoUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhotoUseCase) EXPECT() *MockPhotoUseCaseMockRecorder {
	return m.recorder
}

// GetPhotoFilesByPhotoID mocks base method.
func (m *MockPhotoUseCase) GetPhotoFilesByPhotoID(ctx context.Context, photoID int) (entities.PhotoFileList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhotoFilesByPhotoID", ctx, photoID)
	ret0, _ := ret[0].(entities.PhotoFileList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPhotoFilesByPhotoID indicates an expected call of GetPhotoFilesByPhotoID.
func (mr *MockPhotoUseCaseMockRecorder) GetPhotoFilesByPhotoID(ctx, photoID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhotoFilesByPhotoID", reflect.TypeOf((*MockPhotoUseCase)(nil).GetPhotoFilesByPhotoID), ctx, photoID)
}

// GetPhotoMetaByPhotoID mocks base method.
func (m *MockPhotoUseCase) GetPhotoMetaByPhotoID(ctx context.Context, photoID int) (entities.PhotoMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhotoMetaByPhotoID", ctx, photoID)
	ret0, _ := ret[0].(entities.PhotoMeta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPhotoMetaByPhotoID indicates an expected call of GetPhotoMetaByPhotoID.
func (mr *MockPhotoUseCaseMockRecorder) GetPhotoMetaByPhotoID(ctx, photoID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhotoMetaByPhotoID", reflect.TypeOf((*MockPhotoUseCase)(nil).GetPhotoMetaByPhotoID), ctx, photoID)
}
