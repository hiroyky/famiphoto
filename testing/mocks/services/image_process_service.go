// Code generated by MockGen. DO NOT EDIT.
// Source: services/image_process_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/hiroyky/famiphoto/entities"
)

// MockImageProcessService is a mock of ImageProcessService interface.
type MockImageProcessService struct {
	ctrl     *gomock.Controller
	recorder *MockImageProcessServiceMockRecorder
}

// MockImageProcessServiceMockRecorder is the mock recorder for MockImageProcessService.
type MockImageProcessServiceMockRecorder struct {
	mock *MockImageProcessService
}

// NewMockImageProcessService creates a new mock instance.
func NewMockImageProcessService(ctrl *gomock.Controller) *MockImageProcessService {
	mock := &MockImageProcessService{ctrl: ctrl}
	mock.recorder = &MockImageProcessServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageProcessService) EXPECT() *MockImageProcessServiceMockRecorder {
	return m.recorder
}

// CreateThumbnails mocks base method.
func (m *MockImageProcessService) CreateThumbnails(ctx context.Context, photoFile *entities.PhotoFile, data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateThumbnails", ctx, photoFile, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateThumbnails indicates an expected call of CreateThumbnails.
func (mr *MockImageProcessServiceMockRecorder) CreateThumbnails(ctx, photoFile, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateThumbnails", reflect.TypeOf((*MockImageProcessService)(nil).CreateThumbnails), ctx, photoFile, data)
}
