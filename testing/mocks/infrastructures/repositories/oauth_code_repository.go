// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructures/repositories/oauth_code_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/hiroyky/famiphoto/infrastructures/models"
)

// MockOauthCodeRepository is a mock of OauthCodeRepository interface.
type MockOauthCodeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockOauthCodeRepositoryMockRecorder
}

// MockOauthCodeRepositoryMockRecorder is the mock recorder for MockOauthCodeRepository.
type MockOauthCodeRepositoryMockRecorder struct {
	mock *MockOauthCodeRepository
}

// NewMockOauthCodeRepository creates a new mock instance.
func NewMockOauthCodeRepository(ctrl *gomock.Controller) *MockOauthCodeRepository {
	mock := &MockOauthCodeRepository{ctrl: ctrl}
	mock.recorder = &MockOauthCodeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOauthCodeRepository) EXPECT() *MockOauthCodeRepositoryMockRecorder {
	return m.recorder
}

// GetCode mocks base method.
func (m *MockOauthCodeRepository) GetCode(ctx context.Context, code string) (*models.OauthCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCode", ctx, code)
	ret0, _ := ret[0].(*models.OauthCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCode indicates an expected call of GetCode.
func (mr *MockOauthCodeRepositoryMockRecorder) GetCode(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCode", reflect.TypeOf((*MockOauthCodeRepository)(nil).GetCode), ctx, code)
}

// SetCode mocks base method.
func (m_2 *MockOauthCodeRepository) SetCode(ctx context.Context, code string, m *models.OauthCode) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SetCode", ctx, code, m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCode indicates an expected call of SetCode.
func (mr *MockOauthCodeRepositoryMockRecorder) SetCode(ctx, code, m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCode", reflect.TypeOf((*MockOauthCodeRepository)(nil).SetCode), ctx, code, m)
}
