// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructures/repositories/group_user_repository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dbmodels "github.com/hiroyky/famiphoto/infrastructures/dbmodels"
)

// MockGroupUserRepository is a mock of GroupUserRepository interface.
type MockGroupUserRepository struct {
	ctrl     *gomock.Controller
	recorder *MockGroupUserRepositoryMockRecorder
}

// MockGroupUserRepositoryMockRecorder is the mock recorder for MockGroupUserRepository.
type MockGroupUserRepositoryMockRecorder struct {
	mock *MockGroupUserRepository
}

// NewMockGroupUserRepository creates a new mock instance.
func NewMockGroupUserRepository(ctrl *gomock.Controller) *MockGroupUserRepository {
	mock := &MockGroupUserRepository{ctrl: ctrl}
	mock.recorder = &MockGroupUserRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupUserRepository) EXPECT() *MockGroupUserRepositoryMockRecorder {
	return m.recorder
}

// CreateGroupUsers mocks base method.
func (m *MockGroupUserRepository) CreateGroupUsers(ctx context.Context, groupUsers dbmodels.GroupUserSlice) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGroupUsers", ctx, groupUsers)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGroupUsers indicates an expected call of CreateGroupUsers.
func (mr *MockGroupUserRepositoryMockRecorder) CreateGroupUsers(ctx, groupUsers interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGroupUsers", reflect.TypeOf((*MockGroupUserRepository)(nil).CreateGroupUsers), ctx, groupUsers)
}

// DeleteGroupUsers mocks base method.
func (m *MockGroupUserRepository) DeleteGroupUsers(ctx context.Context, groupUsers dbmodels.GroupUserSlice) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteGroupUsers", ctx, groupUsers)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteGroupUsers indicates an expected call of DeleteGroupUsers.
func (mr *MockGroupUserRepositoryMockRecorder) DeleteGroupUsers(ctx, groupUsers interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGroupUsers", reflect.TypeOf((*MockGroupUserRepository)(nil).DeleteGroupUsers), ctx, groupUsers)
}
