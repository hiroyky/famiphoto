# start docker containers for development
networks:
  famiphoto_network:
services:
  api:
    image: famiphoto_api
    container_name: famiphoto_api
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
      target: local
    ports:
      - 8080:8080
    networks:
      - famiphoto_network
    tty: true
    command: air -c ./.air/.air.toml
    env_file:
      - .env
    volumes:
      - ./api:/go/src/github.com/hiroyky/famiphoto/
      - ${CONTENTS_DIR}:/mnt/famiphoto
  web:
    image: famiphoto_web
    container_name: famiphoto_web
    build: 
      context: .
      dockerfile: ./docker/web/Dockerfile
      target: local
    ports:
      - 3000:3000
    networks:
      - famiphoto_network
    tty: true
    command: npm run dev
    env_file:
      - .env
    volumes:
      - ./web:/var/www/famiphoto_frontend/
  elasticsearch:
    build:
      context: .
      dockerfile: docker/elasticsearch/Dockerfile
    #image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3
    container_name: elasticsearch
    restart: always
    networks:
      - famiphoto_network
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "xpack.security.enabled=false"
  kibana:
    image: docker.elastic.co/kibana/kibana:8.1.3
    container_name: kibana
    networks:
      - famiphoto_network
    #ports:
    #  - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
  mysql:
    image: mysql:8
    container_name: famiphoto_mysqldb
    restart: always
    env_file:
      - .env
    volumes:
      - ./schema/dbschema/generator/:/docker-entrypoint-initdb.d/
    ports:
      - 3306:3306
    networks:
      - famiphoto_network
  redis_session:
    image: redis:6.2
    container_name: redis_session
    platform: linux/amd64
    networks:
      - famiphoto_network
