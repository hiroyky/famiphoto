// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructures/repositories/photo_describe_repositroy.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPhotoDescribeRepository is a mock of PhotoDescribeRepository interface.
type MockPhotoDescribeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPhotoDescribeRepositoryMockRecorder
}

// MockPhotoDescribeRepositoryMockRecorder is the mock recorder for MockPhotoDescribeRepository.
type MockPhotoDescribeRepositoryMockRecorder struct {
	mock *MockPhotoDescribeRepository
}

// NewMockPhotoDescribeRepository creates a new mock instance.
func NewMockPhotoDescribeRepository(ctrl *gomock.Controller) *MockPhotoDescribeRepository {
	mock := &MockPhotoDescribeRepository{ctrl: ctrl}
	mock.recorder = &MockPhotoDescribeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhotoDescribeRepository) EXPECT() *MockPhotoDescribeRepositoryMockRecorder {
	return m.recorder
}

// DescribeEn mocks base method.
func (m *MockPhotoDescribeRepository) DescribeEn(ctx context.Context, photoData []byte) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeEn", ctx, photoData)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeEn indicates an expected call of DescribeEn.
func (mr *MockPhotoDescribeRepositoryMockRecorder) DescribeEn(ctx, photoData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeEn", reflect.TypeOf((*MockPhotoDescribeRepository)(nil).DescribeEn), ctx, photoData)
}
